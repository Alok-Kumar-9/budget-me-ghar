# -*- coding: utf-8 -*-
"""house_price_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RnTk6HW-sHW7IAuD7Ek9DR_wHP4XtOpY
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score, confusion_matrix
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor

df = pd.read_csv('/content/MagicBricks.csv')
df

#in real life example locality matters...so try to incoporate this feature in your dataset...

X = df.drop(['Per_Sqft','Price','Locality'],axis='columns')
Y=df['Price']

X

Y

le1 = LabelEncoder()
le2 = LabelEncoder()
le3 = LabelEncoder()
le4 = LabelEncoder()

X['Furnishing_n'] = le1.fit_transform(X['Furnishing'])
X['Status_n'] = le2.fit_transform(X['Status'])
X['Transaction_n'] = le3.fit_transform(X['Transaction'])
X['Type_n'] = le4.fit_transform(X['Type'])

X.drop(['Furnishing', 'Status', 'Transaction', 'Type'], axis='columns', inplace=True)

X

X.isnull().sum()

Y.isnull().sum()

import math

rr = math.floor(X['Bathroom'].mean(skipna=True))
rw = math.floor(X['Parking'].mean(skipna=True))

print(rr , rw)

X.fillna(value={'Bathroom':rr , 'Parking':rw}, axis='rows', inplace=True)
X

X.isnull().sum()

X_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size=0.2, random_state=42)

model = RandomForestRegressor(n_estimators=150)
model.fit(X_train , Y_train)

predicted = model.predict(X_test)

predicted

ms = model.score(X_test , Y_test)
ms

from sklearn.metrics import r2_score , mean_squared_error

rmse = np.sqrt(mean_squared_error(Y_test , predicted))
r2 = r2_score(Y_test , predicted)

print('RMSE', rmse)
print('R2 Score: ', r2)

